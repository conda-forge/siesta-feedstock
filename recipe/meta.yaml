{% set name = "siesta" %}
{% set siesta_version = "5.2.0" %}
# This changes the X.Y.Z-betaW to X.Y.ZrcW
{% set version = siesta_version.replace("-beta", "b") %}
{% set sha256 = "54a1a16bfeed0f03b5b46524cca1b4c821ef333321592f1876658f73f2b91453" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ siesta_version }}.tar.gz
  url: https://gitlab.com/siesta-project/siesta/-/releases/{{ siesta_version }}/downloads/siesta-{{ siesta_version }}.tar.gz
  sha256: {{ sha256 }}
  patches:
    - patches/425_moremeshsubs.patch

# Default build version to be stepped with every new build!
{% set build = 3 %}

# Define build matrix for MPI vs. non-mpi
## ensure mpi is defined (needed for conda-smithy recipe-lint)
{% set mpi = mpi or 'nompi' %}
{% if mpi == 'nompi' %}
# prioritize nompi variant via build number
{% set build = build + 1000 %}
{% endif %}

{% if mpi != 'nompi' %}
{% set mpi_prefix = "mpi_" + mpi %}
{% else %}
{% set mpi_prefix = "nompi" %}
{% endif %}

build:
  number: {{ build }}
  skip: true  # [win]
  #skip: true  # [mpi != 'nompi' and osx and arm64]
  string: "{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}"


requirements:
  build:
    - {{ stdlib('c') }}
    - {{ compiler('fortran') }}
    - {{ compiler('c') }}
    - make  # [not win]
    - git
    - cmake
    - llvm-openmp  # [osx]
    - libgomp  # [linux]
    - pkg-config
    # Courtesy of DFTB+ feedstock:
    # OpenMPI-framework is not found otherwise when cross compiling for osx_arm64
    - {{ mpi }}  # [mpi == "openmpi" and build_platform != target_platform]
    # Only for tests (ctests uses Python for verification step):
    - openssh
    - python
    - ruamel.yaml
  host:
    - libblas
    - liblapack
    - {{ mpi }}  # [mpi != 'nompi']
    - scalapack  # [mpi != 'nompi']
    - libxc >6.0
    # we need to list libnetcdf and netcdf-fortran twice to get version
    # pinning from conda_build_config and build pinning from {{ mpi_prefix }}
    # We are trying to forcefully remove hdf5 dependency as that should be
    # provided through libnetcdf.
    - libnetcdf
    - libnetcdf * {{ mpi_prefix }}_*
    - netcdf-fortran
    - netcdf-fortran * {{ mpi_prefix }}_*
    - lua
  run:
    - {{ mpi }}  # [mpi != 'nompi']
    - scalapack  # [mpi != 'nompi']
    - libxc >6.0
    - libnetcdf * {{ mpi_prefix }}_*
    - netcdf-fortran * {{ mpi_prefix }}_*
    - lua

about:
  home: https://siesta-project.org/siesta/
  license: GPL-3.0-only
  license_family: GPL
  license_file: COPYING
  summary: A first-principles materials simulation code using DFT
  description: |
    SIESTA is both a method and its computer program implementation,
    to perform efficient electronic structure calculations and ab initio
    molecular dynamics simulations of molecules and solids. SIESTA's
    efficiency stems from the use of strictly localized basis sets and
    from the implementation of linear-scaling algorithms which can be
    applied to suitable systems. A very important feature of the code is
    that its accuracy and cost can be tuned in a wide range, from quick
    exploratory calculations to highly accurate simulations matching the
    quality of other approaches, such as plane-wave and all-electron methods.
  doc_url: https://docs.siesta-project.org/projects/siesta/
  dev_url: https://gitlab.com/siesta-project/siesta/

extra:
  recipe-maintainers:
    - zerothi
    - albgar
    - jan-janssen
