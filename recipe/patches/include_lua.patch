diff --git a/External/Lua-Engine/CMakeLists.txt b/External/Lua-Engine/CMakeLists.txt
index 2412b95e8..496e55900 100644
--- a/External/Lua-Engine/CMakeLists.txt
+++ b/External/Lua-Engine/CMakeLists.txt
@@ -1,4 +1,3 @@
-
 # Define the root folder of flook
 set(FLOOK_ROOT "$ENV{FLOOK_ROOT}" CACHE FILEPATH "flook installation path")
 
@@ -27,7 +26,41 @@ message(STATUS "Searching for flook library")
 list(APPEND CMAKE_MESSAGE_INDENT "  ")
 
 message(CHECK_START "trying pkg-config")
-pkg_check_modules(FLOOK flook>=0.8.1)
+pkg_check_modules(FLOOK flook>=0.8.4)
+
+
+macro(flook_add_dependencies)
+
+  # TODO try if dl should be searched for by the libraries
+  # this is very hard since we should do all combinations (likely)
+  # dl is not a particularly good search name (user-names, etc are likely to
+  # hit this key)
+  message(CHECK_START "Searching for library [dl]")
+  find_library(_flook_lib_dl dl
+    DOC "Searching for dl library (dependency on flook)"
+    REQUIRED
+    )
+  message(CHECK_PASS "Found library [dl]: ${_flook_lib_dl}")
+
+  target_link_libraries(flook::flook INTERFACE ${_flook_lib_dl})
+
+  message(CHECK_START "Searching for library [readline]")
+  find_library(_flook_lib_readline readline
+    DOC "Searching for readline library (dependency on flook)"
+    REQUIRED
+    )
+  target_link_libraries(flook::flook INTERFACE ${_flook_lib_readline})
+  message(CHECK_PASS "Found library [readline]: ${_flook_lib_readline}")
+
+  message(CHECK_START "Searching for library [lua]")
+  find_library(_flook_lib_lua lua
+    DOC "Searching for lua library (dependency on flook)"
+    REQUIRED
+    )
+  target_link_libraries(flook::flook INTERFACE ${_flook_lib_lua})
+  message(CHECK_PASS "Found library [lua]: ${_flook_lib_lua}")
+endmacro()
+
 
 if(FLOOK_FOUND)
 
@@ -36,15 +69,10 @@ if(FLOOK_FOUND)
 
   # Add libraries to namespace
   add_library(flook::flook INTERFACE IMPORTED GLOBAL)
-  # Check if need to add dl manually, or it is already added
-  string(FIND "${FLOOK_LINK_LIBRARIES}" "dl" _dl_index)
-  if( _dl_index GREATER -1)
-    target_link_libraries(flook::flook
-      INTERFACE "${FLOOK_LINK_LIBRARIES}")
-  else()
-    target_link_libraries(flook::flook
-      INTERFACE "${FLOOK_LINK_LIBRARIES}" dl)
-  endif()
+
+  # add libraries
+  target_link_libraries(flook::flook
+    INTERFACE "${FLOOK_LINK_LIBRARIES}")
   target_include_directories(flook::flook
     INTERFACE "${FLOOK_INCLUDE_DIRS}")
 
@@ -79,6 +107,8 @@ else()
   target_include_directories(flook::flook
     INTERFACE "${FLOOK_INCLUDE_DIRS}")
 
+  flook_add_dependencies()
+
   found_return("")
 endif()
 
@@ -117,7 +147,7 @@ find_program(MAKE_EXECUTABLE NAMES gmake make mingw32-make REQUIRED)
 
 
 # Possible sources
-set(url_default "https://github.com/ElectronicStructureLibrary/flook/archive/refs/tags/v0.8.1.tar.gz")
+set(url_default "https://github.com/ElectronicStructureLibrary/flook/archive/refs/tags/v0.8.4.tar.gz")
 #
 if(NOT "$ENV{FLOOK_PACKAGE}" STREQUAL "")
 
@@ -147,6 +177,14 @@ else()
       )
 endif()
 
+set(_flook_build_dir
+  ${CMAKE_CURRENT_BINARY_DIR}/flook-prefix/src/flook-build)
+
+set(FLOOK_INCLUDE_DIRS
+  ${_flook_build_dir})
+set(FLOOK_LINK_LIBRARIES
+  ${_flook_build_dir}/libflookall.a)
+
 ExternalProject_Add(flook
  URL "${url}"
  UPDATE_DISCONNECTED true
@@ -161,7 +199,7 @@ ExternalProject_Add(flook
  #
  # See https://stackoverflow.com/questions/54866067/cmake-and-ninja-missing-and-no-known-rule-to-make-it
  #
- BUILD_BYPRODUCTS ${CMAKE_CURRENT_BINARY_DIR}/flook-prefix/src/flook-build/libflookall.a
+ BUILD_BYPRODUCTS ${FLOOK_LINK_LIBRARIES}
 )
 
 #
@@ -177,24 +215,22 @@ ExternalProject_Add_Step(flook
   COMMAND cp ${CMAKE_CURRENT_BINARY_DIR}/setup.make . && cp -a <SOURCE_DIR>/. .
   DEPENDEES download
   DEPENDERS build
-  WORKING_DIRECTORY <BINARY_DIR> 
+  WORKING_DIRECTORY <BINARY_DIR>
 )
 
 add_library(flook::flook INTERFACE IMPORTED GLOBAL)
 
 add_dependencies(flook::flook flook)
 
-#
-# We do not install, so the .a and .mod files end up here
-#
-
-set(_flook_install_dir "${CMAKE_CURRENT_BINARY_DIR}/flook-prefix/src/flook-build")
+target_link_libraries(flook::flook
+  INTERFACE
+  ${FLOOK_LINK_LIBRARIES}
+  )
 
-set_target_properties(flook::flook
-  PROPERTIES
-  INTERFACE_LINK_LIBRARIES
-    "${_flook_install_dir}/libflookall${CMAKE_STATIC_LIBRARY_SUFFIX};dl"
-  INTERFACE_INCLUDE_DIRECTORIES
-    "${_flook_install_dir}"
+target_include_directories(flook::flook
+  INTERFACE
+  ${FLOOK_INCLUDE_DIRS}
 )
 
+flook_add_dependencies()
+
